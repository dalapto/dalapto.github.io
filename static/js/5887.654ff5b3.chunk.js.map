{"version":3,"file":"static/js/5887.654ff5b3.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/layers/support/ElevationSampler.js","../node_modules/@arcgis/core/layers/support/ElevationSamplerData.js","../node_modules/@arcgis/core/layers/support/ElevationTile.js","../node_modules/@arcgis/core/layers/support/ElevationQuery.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import\"../../core/has.js\";import e from\"../../core/Logger.js\";import{getMetersPerUnitForSR as t}from\"../../core/unitUtils.js\";import{toExtent as n,containsXY as s,create as i}from\"../../geometry/support/aaBoundingRect.js\";import{project as o}from\"../../geometry/support/webMercatorUtils.js\";import a from\"../../geometry/Point.js\";const r=e.getLogger(\"esri.layers.support.ElevationSampler\");class l{queryElevation(e){return u(e.clone(),this)}on(){return d}projectIfRequired(e,t){return p(e,t)}}class m extends l{get spatialReference(){return this.extent.spatialReference}constructor(e,s,i){super(),this.tile=e,this.noDataValue=i;const o=e.tile.extent;this.extent=n(o,s.spatialReference),this.extent.zmin=e.zmin,this.extent.zmax=e.zmax,this._aaExtent=o;const a=t(s.spatialReference),r=s.lodAt(e.tile.level).resolution*a;this.demResolution={min:r,max:r}}contains(e){const t=this.projectIfRequired(e,this.spatialReference);return null!=t&&this.containsAt(t.x,t.y)}containsAt(e,t){return s(this._aaExtent,e,t)}elevationAt(e,t){if(!this.containsAt(e,t)){const n=this.extent,s=`${n.xmin}, ${n.ymin}, ${n.xmax}, ${n.ymax}`;return r.warn(\"#elevationAt()\",`Point used to sample elevation (${e}, ${t}) is outside of the sampler extent (${s})`),this.noDataValue}return this.tile.sample(e,t)??this.noDataValue}}class c extends l{get spatialReference(){return this.extent.spatialReference}constructor(e,t,s){let o;super(),\"number\"==typeof t?(this.noDataValue=t,o=null):(o=t,this.noDataValue=s),this.samplers=o?e.map((e=>new m(e,o,this.noDataValue))):e;const a=this.samplers[0];if(a){this.extent=a.extent.clone();const{min:e,max:t}=a.demResolution;this.demResolution={min:e,max:t};for(let n=1;n<this.samplers.length;n++){const e=this.samplers[n];this.extent.union(e.extent),this.demResolution.min=Math.min(this.demResolution.min,e.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,e.demResolution.max)}}else this.extent=n(i(),o.spatialReference),this.demResolution={min:0,max:0}}elevationAt(e,t){for(const n of this.samplers)if(n.containsAt(e,t))return n.elevationAt(e,t);return r.warn(\"#elevationAt()\",`Point used to sample elevation (${e}, ${t}) is outside of the sampler`),this.noDataValue}}function u(e,t){const n=p(e,t.spatialReference);if(!n)return null;switch(e.type){case\"point\":h(e,n,t);break;case\"polyline\":f(e,n,t);break;case\"multipoint\":x(e,n,t)}return e}function p(e,t){if(null==e)return null;const n=e.spatialReference;if(n.equals(t))return e;const s=o(e,t);return s||r.error(`Cannot project geometry spatial reference (wkid:${n.wkid}) to elevation sampler spatial reference (wkid:${t.wkid})`),s}function h(e,t,n){e.z=n.elevationAt(t.x,t.y)}function f(e,t,n){R.spatialReference=t.spatialReference;const s=e.hasM&&!e.hasZ;for(let i=0;i<e.paths.length;i++){const o=e.paths[i],a=t.paths[i];for(let e=0;e<o.length;e++){const t=o[e],i=a[e];R.x=i[0],R.y=i[1],s&&(t[3]=t[2]),t[2]=n.elevationAt(R.x,R.y)}}e.hasZ=!0}function x(e,t,n){R.spatialReference=t.spatialReference;const s=e.hasM&&!e.hasZ;for(let i=0;i<e.points.length;i++){const o=e.points[i],a=t.points[i];R.x=a[0],R.y=a[1],s&&(o[3]=o[2]),o[2]=n.elevationAt(R.x,R.y)}e.hasZ=!0}const R=new a,d={remove(){}};export{l as ElevationSamplerBase,c as MultiTileElevationSampler,m as TileElevationSampler,u as updateGeometryElevation};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nclass t{constructor(t,h){this.data=t,this.safeWidth=.99999999*(t.width-1),this.dx=(t.width-1)/(h[2]-h[0]),this.dy=(t.width-1)/(h[3]-h[1]),this.x0=h[0],this.y1=h[3]}}export{t as ElevationSamplerData};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{ElevationSamplerData as a}from\"./ElevationSamplerData.js\";class t{constructor(t,l=null){if(this.tile=t,null!=l&&null!=t){const e=t.extent;this._samplerData=new a(l,e)}}get zmin(){return null!=this._samplerData?this._samplerData.data.minValue:0}get zmax(){return null!=this._samplerData?this._samplerData.data.maxValue:0}sample(a,t){if(null==this._samplerData)return;const{safeWidth:e,data:r,dx:s,dy:n,y1:i,x0:u}=this._samplerData,{width:m,values:o,noDataValue:h}=r,p=l(n*(i-t),0,e),D=l(s*(a-u),0,e),f=Math.floor(p),c=Math.floor(D),d=f*m+c,_=d+m,x=o[d],V=o[_],g=o[d+1],v=o[_+1];if(x!==h&&V!==h&&g!==h&&v!==h){const a=D-c,t=x+(g-x)*a;return t+(V+(v-V)*a-t)*(p-f)}}}function l(a,t,l){return a<t?t:a>l?l:a}export{t as ElevationTile};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.27/esri/copyright.txt for details.\n*/\nimport{result as e}from\"../../core/asyncUtils.js\";import t from\"../../core/Error.js\";import{assertIsSome as i}from\"../../core/maybe.js\";import{whenOrAbort as n,throwIfAbortError as l,eachAlways as s}from\"../../core/promiseUtils.js\";import{getMetersPerUnitForSR as o}from\"../../core/unitUtils.js\";import a from\"../../geometry/Multipoint.js\";import r from\"../../geometry/Point.js\";import c from\"../../geometry/Polyline.js\";import{initializeProjection as u,project as h}from\"../../geometry/projection.js\";import{fromExtent as p,create as m,contains as f}from\"../../geometry/support/aaBoundingRect.js\";import{MultiTileElevationSampler as d}from\"./ElevationSampler.js\";import{ElevationTile as y}from\"./ElevationTile.js\";import{TileKey as T}from\"./TileKey.js\";class v{async queryAll(e,i,n){if(!(e=n&&n.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");const l=w.fromGeometry(i);let s=!1;n&&n.returnSampleInfo||(s=!0);const o={...q,...n,returnSampleInfo:!0},a=await this.query(e[e.length-1],l,o),r=await this._queryAllContinue(e,a,o);return r.geometry=r.geometry.export(),s&&delete r.sampleInfo,r}async query(e,i,n){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||!(i instanceof w)&&\"point\"!==i.type&&\"multipoint\"!==i.type&&\"polyline\"!==i.type)throw new t(\"elevation-query:invalid-geometry\",\"Only point, polyline and multipoint geometries can be used to query elevation\");const l={...q,...n},s=new _(e,i.spatialReference,l),o=l.signal;return await e.load({signal:o}),await this._createGeometryDescriptor(s,i,o),await this._selectTiles(s,o),await this._populateElevationTiles(s,o),this._sampleGeometryWithElevation(s),this._createQueryResult(s,o)}async createSampler(e,i,n){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const l={...q,...n};return this._createSampler(e,i,l)}async createSamplerAll(e,i,n){if(!(e=n&&n.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const l={...q,...n,returnSampleInfo:!0},s=await this._createSampler(e[e.length-1],i,l);return this._createSamplerAllContinue(e,i,s,l)}async _createSampler(e,t,i,n){const l=i.signal;await e.load({signal:l});const s=t.spatialReference,o=e.tileInfo.spatialReference;s.equals(o)||(await u([{source:s,dest:o}],{signal:l}),t=h(t,o));const a=new E(e,t,i,n);return await this._selectTiles(a,l),await this._populateElevationTiles(a,l),new d(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,n){if(e.pop(),!e.length)return i;const l=i.samplers.map((e=>p(e.extent))),s=await this._createSampler(e[e.length-1],t,n,l);if(0===s.samplers.length)return i;const o=i.samplers.concat(s.samplers),a=new d(o,n.noDataValue);return this._createSamplerAllContinue(e,t,a,n)}async _queryAllContinue(e,t,n){const l=e.pop(),s=t.geometry.coordinates,o=t.sampleInfo;i(o);const a=[],r=[];for(let i=0;i<s.length;i++){const t=o[i];t.demResolution>=0?t.source||(t.source=l):e.length&&(a.push(s[i]),r.push(i))}if(!e.length||0===a.length)return t;const c=t.geometry.clone(a),u=await this.query(e[e.length-1],c,n),h=u.sampleInfo;if(!h)throw new Error(\"no sampleInfo\");return r.forEach(((e,t)=>{s[e].z=u.geometry.coordinates[t].z,o[e].demResolution=h[t].demResolution})),this._queryAllContinue(e,t,n)}async _createQueryResult(e,t){const n=await e.geometry.project(e.outSpatialReference,t);i(n);const l={geometry:n.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(l.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach((e=>{e.tile=null,e.elevationTile=null})),l}async _createGeometryDescriptor(e,i,n){let l;const s=e.layer.tileInfo.spatialReference;if(i instanceof w?l=await i.project(s,n):(await u([{source:i.spatialReference,dest:s}],{signal:n}),l=h(i,s)),!l)throw new t(\"elevation-query:spatial-reference-mismatch\",`Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${s.wkid}'`);e.geometry=w.fromGeometry(l)}async _selectTiles(e,i){\"geometry\"===e.type&&this._preselectOutsideLayerExtent(e);const n=e.options.demResolution;if(\"number\"==typeof n)this._selectTilesClosestResolution(e,n);else if(\"finest-contiguous\"===n)await this._selectTilesFinestContiguous(e,i);else{if(\"auto\"!==n)throw new t(\"elevation-query:invalid-dem-resolution\",`Invalid dem resolution value '${n}', expected a number, \"finest-contiguous\" or \"auto\"`);await this._selectTilesAuto(e,i)}}_preselectOutsideLayerExtent(e){if(null==e.layer.fullExtent)return;const t=new y(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach((e=>{const n=e.x,l=e.y;(n<i.xmin||n>i.xmax||l<i.ymin||l>i.ymax)&&(e.elevationTile=t)}))}_selectTilesClosestResolution(e,t){const i=this._findNearestDemResolutionLODIndex(e,t);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,l=t/o(i.spatialReference),s=I(i,n);let a=s[0],r=0;for(let o=1;o<s.length;o++){const e=s[o];Math.abs(e.resolution-l)<Math.abs(a.resolution-l)&&(a=e,r=o)}return r}async _selectTilesFinestContiguous(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,l=R(i,n,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,l,t)}async _selectTilesFinestContiguousAt(e,i,s){const o=e.layer;if(e.selectTilesAtLOD(i),i<0)return;const a=o.tilemapCache,r=e.getTilesToFetch();try{if(a&&!A(a))await n(Promise.all(r.map((e=>a.fetchAvailability(e.level,e.row,e.col,{signal:s})))),s);else if(await this._populateElevationTiles(e,s),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new t(\"elevation-query:has-unavailable-tiles\")}catch(c){l(c),await this._selectTilesFinestContiguousAt(e,i-1,s)}}async _populateElevationTiles(e,t){const i=e.getTilesToFetch(),l={},o=e.options.cache,a=e.options.noDataValue,r=i.map((async i=>{if(null==i.id)return;const n=`${e.layer.uid}:${i.id}:${a}`,s=null!=o?o.get(n):null,r=null!=s?s:await e.layer.fetchTile(i.level,i.row,i.col,{noDataValue:a,signal:t});null!=o&&o.put(n,r),l[i.id]=new y(i,r)}));await n(s(r),t),e.populateElevationTiles(l)}async _selectTilesAuto(t,i){this._selectTilesAutoFinest(t),this._reduceTilesForMaximumRequests(t);const s=t.layer.tilemapCache;if(!s||A(s))return this._selectTilesAutoPrefetchUpsample(t,i);const o=t.getTilesToFetch(),a={},r=o.map((async t=>{const n=new T(null,0,0,0,m()),o=await e(s.fetchAvailabilityUpsample(t.level,t.row,t.col,n,{signal:i}));!1!==o.ok?null!=t.id&&(a[t.id]=n):l(o.error)}));await n(Promise.all(r),i),t.remapTiles(a)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const n={},l=e=>{null!=e.id&&(e.id in n?n[e.id]++:(n[e.id]=1,i++))},s=e=>{if(null==e.id)return;const t=n[e.id];1===t?(delete n[e.id],i--):n[e.id]=t-1};e.forEachTileToFetch(l,s);let o=!0;for(;o&&(o=!1,e.forEachTileToFetch((n=>{i<=e.options.maximumAutoTileRequests||(s(n),t.upsampleTile(n)&&(o=!0),l(n))}),s),o););}_selectTilesAutoFinest(e){const{tileInfo:t,tilemapCache:i}=e.layer,n=R(t,i,e.options.minDemResolution);e.selectTilesAtLOD(n,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let n=!1;e.forEachTileToFetch(((e,t)=>{i.upsampleTile(e)?n=!0:t()})),n&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach((t=>{const i=t.elevationTile;let n=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);null!=e?n=e:t.elevationTile=null}t.z=n}))}_extractSampleInfo(e){const t=e.layer.tileInfo,i=o(t.spatialReference);return e.geometry.coordinates.map((n=>{let l=-1;if(n.elevationTile&&n.elevationTile!==e.outsideExtentTile){l=t.lodAt(n.elevationTile.tile.level).resolution*i}return{demResolution:l}}))}}class w{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new w;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((e=>e.clone())),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await u([{source:this.spatialReference,dest:e}],{signal:t});const i=new a({spatialReference:this.spatialReference,points:this.coordinates.map((e=>[e.x,e.y]))}),n=h(i,e);if(!n)return null;const l=this.coordinates.map(((e,t)=>{const i=e.clone(),l=n.points[t];return i.x=l[0],i.y=l[1],i})),s=this.clone(l);return s.spatialReference=e,s}static fromGeometry(e){const t=new w;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof w)t.coordinates=e.coordinates.map((e=>e.clone())),t._exporter=(t,i)=>{const n=e.clone(t);return n.spatialReference=i,n};else switch(e.type){case\"point\":{const i=e,{hasZ:n,hasM:l}=i;t.coordinates=n&&l?[new g(i.x,i.y,i.z,i.m)]:n?[new g(i.x,i.y,i.z)]:l?[new g(i.x,i.y,null,i.m)]:[new g(i.x,i.y)],t._exporter=(t,i)=>e.hasM?new r(t[0].x,t[0].y,t[0].z,t[0].m,i):new r(t[0].x,t[0].y,t[0].z,i);break}case\"multipoint\":{const i=e,{hasZ:n,hasM:l}=i;t.coordinates=n&&l?i.points.map((e=>new g(e[0],e[1],e[2],e[3]))):n?i.points.map((e=>new g(e[0],e[1],e[2]))):l?i.points.map((e=>new g(e[0],e[1],null,e[2]))):i.points.map((e=>new g(e[0],e[1]))),t._exporter=(t,i)=>e.hasM?new a({points:t.map((e=>[e.x,e.y,e.z,e.m])),hasZ:!0,hasM:!0,spatiaReference:i}):new a(t.map((e=>[e.x,e.y,e.z])),i);break}case\"polyline\":{const i=e,n=[],l=[],{hasZ:s,hasM:o}=e;let a=0;for(const e of i.paths)if(l.push([a,a+e.length]),a+=e.length,s&&o)for(const t of e)n.push(new g(t[0],t[1],t[2],t[3]));else if(s)for(const t of e)n.push(new g(t[0],t[1],t[2]));else if(o)for(const t of e)n.push(new g(t[0],t[1],null,t[2]));else for(const t of e)n.push(new g(t[0],t[1]));t.coordinates=n,t._exporter=(t,i)=>{const n=e.hasM?t.map((e=>[e.x,e.y,e.z,e.m])):t.map((e=>[e.x,e.y,e.z])),s=l.map((e=>n.slice(e[0],e[1])));return new c({paths:s,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class g{constructor(e,t,i=null,n=null,l=null,s=null){this.x=e,this.y=t,this.z=i,this.m=n,this.tile=l,this.elevationTile=s}clone(){return new g(this.x,this.y,this.z,this.m)}}class x{constructor(e,t){this.layer=e,this.options=t}}class _ extends x{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type=\"geometry\"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((e=>e.tile=null));else{const{tileInfo:t,tilemapCache:i}=this.layer,n=I(t,i)[e].level;this.geometry.coordinates.forEach((e=>e.tile=t.tileAt(n,e.x,e.y)))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile?.id&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates){const i=t.tile?.id;t.tile=i?e[i]:null}}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const n=i.tile;if(!n)continue;const l=i.tile?.id;i.elevationTile||!l||e[l]||(e[l]=n,t.push(n))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>{t.tile=null}))}}class E extends x{constructor(e,t,i,n){super(e,i),this.type=\"extent\",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=n}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),n=Math.min(i,e);n<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(n)}_maximumLodForRequests(e){const{tileInfo:t,tilemapCache:i}=this.layer,n=I(t,i);if(!e)return n.length-1;const l=this.extent;if(null==l)return-1;for(let s=n.length-1;s>=0;s--){const i=n[s],o=i.resolution*t.size[0],a=i.resolution*t.size[1];if(Math.ceil(l.width/o)*Math.ceil(l.height/a)<=e)return s}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles.map((t=>e[t.id])))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach((i=>{if(this._fetchedCandidates.has(i))return void(t&&t(i));let n=!1;e(i,(()=>n=!0)),n?t&&t(i):this._candidateTiles.push(i)})),this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},n=[];for(const s of e){const e=s.id;e&&!i[e]?(i[e]=s,n.push(s)):t&&t(s)}const l=n.sort(((e,t)=>e.level-t.level));return l.filter(((e,i)=>{for(let n=0;n<i;n++){const i=l[n].extent;if(i&&e.extent&&f(i,e.extent))return t&&t(e),!1}return!0}))}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(null==t)return;const{tileInfo:i,tilemapCache:n}=this.layer,l=I(i,n)[e],s=i.tileAt(l.level,t.xmin,t.ymin),o=s.extent;if(null==o)return;const a=l.resolution*i.size[0],r=l.resolution*i.size[1],c=Math.ceil((t.xmax-o[0])/a),u=Math.ceil((t.ymax-o[1])/r);for(let h=0;h<u;h++)for(let e=0;e<c;e++){const t=new T(null,s.level,s.row-h,s.col+e);i.updateTileInfo(t),this._tileIsMasked(t)||this._candidateTiles.push(t)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some((t=>e.extent&&f(t,e.extent)))}}function R(e,t,i=0){const n=I(e,t);let l=n.length-1;if(i>0){const t=i/o(e.spatialReference),s=n.findIndex((e=>e.resolution<t));0===s?l=0:s>0&&(l=s-1)}return l}const q={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:\"auto\",minDemResolution:0};function I(e,t){const i=e.lods;if(A(t)){const{effectiveMinLOD:e,effectiveMaxLOD:n}=t;return i.filter((t=>t.level>=e&&t.level<=n))}return i}function A(e){return null!=e?.tileInfo}export{v as ElevationQuery,w as GeometryDescriptor,R as getFinestLodIndex};\n"],"names":["r","e","getLogger","l","_classCallCheck","_createClass","key","value","t","n","p","spatialReference","type","z","elevationAt","x","y","h","R","s","hasM","hasZ","i","paths","length","o","a","f","points","u","clone","this","d","m","_l","_inherits","_super","_createSuper","_this","call","tile","noDataValue","extent","zmin","zmax","_aaExtent","lodAt","level","resolution","demResolution","min","max","get","projectIfRequired","containsAt","_this$tile$sample","concat","xmin","ymin","xmax","ymax","warn","sample","c","_l2","_super2","_this2","samplers","map","_a$demResolution","union","Math","_step","_iterator","_createForOfIteratorHelper","done","err","equals","error","wkid","remove","data","safeWidth","width","dx","dy","x0","y1","arguments","undefined","_samplerData","minValue","maxValue","_this$_samplerData","values","D","floor","_","V","g","v","_queryAll","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","ignoreInvisibleLayers","filter","visible","slice","w","fromGeometry","returnSampleInfo","_objectSpread","q","query","sent","_queryAllContinue","abrupt","geometry","export","sampleInfo","stop","_x","_x2","_x3","apply","_query","_callee2","_context2","signal","load","_createGeometryDescriptor","_selectTiles","_populateElevationTiles","_sampleGeometryWithElevation","_createQueryResult","_x4","_x5","_x6","_createSampler2","_callee3","_context3","_createSampler","_x7","_x8","_x9","_createSamplerAll","_callee4","_context4","_createSamplerAllContinue","_x10","_x11","_x12","_createSampler3","_callee5","_context5","tileInfo","t0","source","dest","E","elevationTiles","layer","options","_x13","_x14","_x15","_x16","_createSamplerAllContinue2","_callee6","_context6","pop","_x17","_x18","_x19","_x20","_queryAllContinue2","_callee7","_i","_t","_context7","coordinates","push","Error","forEach","_x21","_x22","_x23","_createQueryResult2","_callee8","_context8","project","outSpatialReference","_extractSampleInfo","elevationTile","_x24","_x25","_createGeometryDescriptor2","_callee9","_context9","_x26","_x27","_x28","_selectTiles2","_callee10","_context10","_preselectOutsideLayerExtent","_selectTilesClosestResolution","_selectTilesFinestContiguous","_selectTilesAuto","_x29","_x30","fullExtent","outsideExtentTile","_findNearestDemResolutionLODIndex","selectTilesAtLOD","_e$layer","tilemapCache","I","abs","_selectTilesFinestContiguous2","_callee11","_e$layer2","_context11","minDemResolution","_selectTilesFinestContiguousAt","_x31","_x32","_selectTilesFinestContiguousAt2","_callee12","_context12","getTilesToFetch","A","Promise","all","fetchAvailability","row","col","allElevationTilesFetched","clearElevationTiles","_x33","_x34","_x35","_populateElevationTiles2","_callee14","_context14","cache","_ref","_callee13","_context13","id","uid","fetchTile","put","_x38","populateElevationTiles","_x36","_x37","_selectTilesAuto2","_callee16","_context16","_selectTilesAutoFinest","_reduceTilesForMaximumRequests","_selectTilesAutoPrefetchUpsample","_ref2","_callee15","_context15","T","fetchAvailabilityUpsample","ok","_x41","remapTiles","_x39","_x40","forEachTileToFetch","maximumAutoTileRequests","upsampleTile","_e$layer3","_selectTilesAutoPrefetchUpsample2","_callee17","_context17","_x42","_x43","_exporter","_project","_callee18","_context18","_x44","_x45","spatiaReference","_step2","_iterator2","_step3","_iterator3","_step4","_iterator4","_step5","_iterator5","_x46","_this$layer","tileAt","some","_step6","_iterator6","_step7","_iterator7","_t7$tile","_step8","_iterator8","_t8$tile","_step9","_iterator9","_i7$tile","_step10","_iterator10","_loop","_x47","_candidateTiles","_fetchedCandidates","Set","intersection","maskExtents","_maximumLodForRequests","_selectCandidateTilesCoveringExtentAt","_this$layer2","size","ceil","height","clear","_step11","_iterator11","add","_uniqueNonOverlappingTiles","_this3","has","_step12","_iterator12","sort","_this$layer3","updateTileInfo","_tileIsMasked","findIndex","lods","effectiveMinLOD","effectiveMaxLOD"],"sourceRoot":""}