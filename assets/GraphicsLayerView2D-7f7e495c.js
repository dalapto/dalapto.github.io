import{E as p,F as o,V as a,R as g,v as s,w as m,x as l}from"./index-68dc14fa.js";import{f as c,d as n}from"./LayerView-254aceaf.js";import{i as d}from"./GraphicContainer-181ba3cc.js";import{o as u}from"./GraphicsView2D-46380350.js";import"./Container-dee0a236.js";import"./definitions-ee300b5e.js";import"./enums-b14466b3.js";import"./Texture-74fa6083.js";import"./color-a1d43703.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./BaseGraphicContainer-65751008.js";import"./FeatureContainer-4bc03adf.js";import"./AttributeStoreView-4df8fac2.js";import"./TiledDisplayObject-791a1635.js";import"./WGLContainer-e6808f20.js";import"./VertexArrayObject-7818dfa0.js";import"./ProgramTemplate-85d663fc.js";import"./GeometryUtils-3d082ee3.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-c807ea69.js";import"./featureConversionUtils-cacc55c7.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-1874e008.js";import"./ExpandedCIM-4d1e60de.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-93c064e0.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-874bcbbe.js";import"./floatRGBA-1e665c7a.js";import"./util-b144da55.js";import"./TileContainer-a64fda01.js";import"./vec3f32-ad1dc57f.js";import"./normalizeUtils-81a58723.js";import"./normalizeUtilsCommon-40843aa7.js";import"./normalizeUtilsSync-ec3711df.js";import"./projectionSupport-8a4f87a8.js";import"./json-48e3ea08.js";import"./Matcher-a7cc3950.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-129a6fa5.js";import"./devEnvironmentUtils-5002a058.js";import"./webStyleSymbolUtils-d26e2ae7.js";import"./ComputedAttributeStorage-93945155.js";import"./arcadeTimeUtils-661c8213.js";import"./executionError-c92d3b85.js";const w={remove(){},pause(){},resume(){}};let e=class extends c(n){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new u({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new d(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler))}detach(){this.container.removeAllChildren(),this.graphicsView=p(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){return this.graphicsView?this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate):[]}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof o?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):a.isCollection(i)&&i.length>0&&(t=i.map(h=>h&&h.uid).toArray());const r=t==null?void 0:t.filter(g);return r!=null&&r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):w}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};s([m()],e.prototype,"graphicsView",void 0),e=s([l("esri.views.2d.layers.GraphicsLayerView2D")],e);const ci=e;export{ci as default};
