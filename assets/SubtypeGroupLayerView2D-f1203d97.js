import{v as m,x as d,l as u,z as y,N as h,O as b}from"./index-68dc14fa.js";import c from"./FeatureLayerView2D-8f5bb4b2.js";import"./Container-dee0a236.js";import"./definitions-ee300b5e.js";import"./enums-b14466b3.js";import"./Texture-74fa6083.js";import"./LayerView-254aceaf.js";import"./AttributeStoreView-4df8fac2.js";import"./TiledDisplayObject-791a1635.js";import"./color-a1d43703.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./WGLContainer-e6808f20.js";import"./VertexArrayObject-7818dfa0.js";import"./ProgramTemplate-85d663fc.js";import"./GeometryUtils-3d082ee3.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-c807ea69.js";import"./featureConversionUtils-cacc55c7.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-1874e008.js";import"./ExpandedCIM-4d1e60de.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-93c064e0.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-874bcbbe.js";import"./floatRGBA-1e665c7a.js";import"./util-b144da55.js";import"./BitmapTileContainer-21f1186e.js";import"./Bitmap-b202d57f.js";import"./TileContainer-a64fda01.js";import"./CircularArray-ef508845.js";import"./BufferPool-b7835e7b.js";import"./FeatureContainer-4bc03adf.js";import"./floorFilterUtils-080a7cd2.js";import"./popupUtils-0c52bb6b.js";import"./RefreshableLayerView-8aa9ea19.js";function g(i,e){return!i.visible||i.minScale!==0&&e>i.minScale||i.maxScale!==0&&e<i.maxScale}let n=class extends c{initialize(){this.addHandles([u(()=>this.view.scale,()=>this._update(),y)],"constructor")}isUpdating(){var l;const i=this.layer.sublayers.some(p=>p.renderer!=null),e=this._commandsQueue.updating,s=this._updatingRequiredFieldsPromise!=null,t=!this._proxy||!this._proxy.isReady,r=this._pipelineIsUpdating,o=this.tileRenderer==null||((l=this.tileRenderer)==null?void 0:l.updating),a=i&&(e||s||t||r||o);return h("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${a}
  -> hasRenderer ${i}
  -> hasPendingCommand ${e}
  -> updatingRequiredFields ${s}
  -> updatingProxy ${t}
  -> updatingPipeline ${r}
  -> updatingTileRenderer ${o}
`),a}_injectOverrides(i){let e=super._injectOverrides(i);const s=this.view.scale,t=this.layer.sublayers.filter(o=>g(o,s)).map(o=>o.subtypeCode);if(!t.length)return e;e=e??new b().toJSON();const r=`NOT ${this.layer.subtypeField} IN (${t.join(",")})`;return e.where=e.where?`(${e.where}) AND (${r})`:r,e}_setLayersForFeature(i){const e=this.layer.fieldsIndex.get(this.layer.subtypeField),s=i.attributes[e.name],t=this.layer.sublayers.find(r=>r.subtypeCode===s);i.layer=i.sourceLayer=t}_createSchemaConfig(){const i={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map(r=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:r.labelingInfo,labelsVisible:r.labelsVisible,renderer:r.renderer,subtypeCode:r.subtypeCode,orderBy:null}))},e=this.layer.sublayers.map(r=>r.subtypeCode).join(","),s=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${e})`:"1=2";let t=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return t+=s,{...super._createSchemaConfig(),...i,definitionExpression:t}}};n=m([d("esri.views.2d.layers.SubtypeGroupLayerView2D")],n);const se=n;export{se as default};
