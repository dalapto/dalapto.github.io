import{E as p,F as o,V as a,R as g,v as s,w as m,x as l}from"./index-425e7585.js";import{f as c,d as n}from"./LayerView-4f265de7.js";import{i as d}from"./GraphicContainer-4408b285.js";import{o as u}from"./GraphicsView2D-ff677f87.js";import"./Container-68ee98d6.js";import"./definitions-aa1a0ac7.js";import"./enums-b14466b3.js";import"./Texture-f032536a.js";import"./color-f290614c.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./BaseGraphicContainer-8cfa4c9c.js";import"./FeatureContainer-79d223a8.js";import"./AttributeStoreView-89769f64.js";import"./TiledDisplayObject-56d0ee2b.js";import"./WGLContainer-0b23b89f.js";import"./VertexArrayObject-bf06f758.js";import"./ProgramTemplate-fea53f4a.js";import"./GeometryUtils-60ea8b48.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-7c7e380c.js";import"./featureConversionUtils-3c8f4fc9.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-e0b95cd2.js";import"./ExpandedCIM-e9e50576.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-8d5b616c.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-54bf5764.js";import"./floatRGBA-11aa62c5.js";import"./util-841599d8.js";import"./TileContainer-e434411e.js";import"./vec3f32-ad1dc57f.js";import"./normalizeUtils-42f6ab93.js";import"./normalizeUtilsCommon-cf6c9e5b.js";import"./normalizeUtilsSync-68159967.js";import"./projectionSupport-427769ed.js";import"./json-48e3ea08.js";import"./Matcher-443bdc13.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-67ba1bf9.js";import"./devEnvironmentUtils-5002a058.js";import"./webStyleSymbolUtils-409439c5.js";import"./ComputedAttributeStorage-2f957e63.js";import"./arcadeTimeUtils-1e25f380.js";import"./executionError-c92d3b85.js";const w={remove(){},pause(){},resume(){}};let e=class extends c(n){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new u({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new d(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler))}detach(){this.container.removeAllChildren(),this.graphicsView=p(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){return this.graphicsView?this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate):[]}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof o?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):a.isCollection(i)&&i.length>0&&(t=i.map(h=>h&&h.uid).toArray());const r=t==null?void 0:t.filter(g);return r!=null&&r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):w}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};s([m()],e.prototype,"graphicsView",void 0),e=s([l("esri.views.2d.layers.GraphicsLayerView2D")],e);const ci=e;export{ci as default};
